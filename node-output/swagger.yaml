{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Simple Artist API",
    "description" : "A simple API to illustrate OpenAPI concepts",
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/jonas.pena/ArtistTutorialApi/1.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "security" : [ {
    "BasicAuth" : [ ]
  } ],
  "paths" : {
    "/artists" : {
      "get" : {
        "description" : "Returns a list of artists",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Limits the number of items on a page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Specifies the page number of the artists to be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully returned a list of artists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Artist"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Lets a user post a new artist",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Artist"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created a new artist"
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/artists/{username}" : {
      "get" : {
        "description" : "Obtain information about an artist from his or her unique username",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully returned an artist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Artist" : {
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "artist_name" : {
            "type" : "string"
          },
          "artist_genre" : {
            "type" : "string"
          },
          "albums_recorded" : {
            "type" : "integer"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "Schema" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "inline_response_400" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "artist_name" : {
            "type" : "string"
          },
          "artist_genre" : {
            "type" : "string"
          },
          "albums_recorded" : {
            "type" : "integer"
          }
        }
      }
    },
    "responses" : {
      "400Error" : {
        "description" : "Invalid request",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_400"
            }
          }
        }
      }
    },
    "parameters" : {
      "PageLimit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Limits the number of items on a page",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer"
        }
      },
      "PageOffset" : {
        "name" : "offset",
        "in" : "query",
        "description" : "Specifies the page number of the artists to be displayed",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "integer"
        }
      }
    },
    "securitySchemes" : {
      "BasicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}